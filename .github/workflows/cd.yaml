name: CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Checkout the repository

      - name: Log in to Docker Hub
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: echo $DOCKERHUB_TOKEN | docker login -u $DOCKERHUB_USERNAME --password-stdin

      - name: Build Docker image
        run: |
          # Check if Dockerfile exists
          if [ -f Dockerfile ]; then
            echo "Dockerfile found in the current directory."
          else
            echo "Dockerfile not found in the current directory. Please make sure it exists."
            exit 1
          fi

          # Build Docker image
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/bot_hokky:latest .

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/bot_hokky:latest

      - name: Deploy Docker image to remote server
        env:
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_PASSWORD: ${{ secrets.REMOTE_PASSWORD }}
          BOT_TOKEN_SECRET: ${{ secrets.BOT_TOKEN }}
        run: |
          sshpass -p "$REMOTE_PASSWORD" ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST << EOF
            # Check if Docker is installed
            if ! [ -x "$(command -v docker)" ]; then
              echo 'Error: Docker is not installed.' >&2
              exit 1
            fi

            # Check if Docker Compose is installed; if not, install it
            if ! [ -x "$(command -v docker-compose)" ]; then
              echo 'Docker Compose is not installed. Installing...'
              sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")')/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            else
              echo 'Docker Compose is already installed.'
            fi

            # Pull the latest Docker image
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/bot_hokky:latest

            # Stop existing containers and start new ones
            docker-compose down
            docker-compose up -d --build
          EOF
